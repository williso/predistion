import streamlit as st
import pandas as pd

# -------------------------
# 1. Load v√† x·ª≠ l√Ω d·ªØ li·ªáu
# -------------------------
@st.cache_data
def load_data():
    # ƒê·ªçc file CSV
    df = pd.read_csv("Merged_ASIN_Data.csv")
    
    # Gi·ªØ l·∫°i c√°c c·ªôt c·∫ßn thi·∫øt v√† lo·∫°i b·ªè h√†ng thi·∫øu d·ªØ li·ªáu
    df = df[[
        'ASIN', 'Niche', 'Product Type', 'Layout ( Text and Image)', 'Number of Colors', 'Trend Quote',
        'Recipient/Sender in the Message', 'Color', 'Message Content', 'Style Design',
        'Tone Design', 'Motif Design', '7 Day Conversion Rate'
    ]].dropna()
    
    # Chuy·ªÉn c·ªôt Conversion Rate sang d·∫°ng s·ªë v√† lo·∫°i b·ªè h√†ng l·ªói
    df['7 Day Conversion Rate'] = pd.to_numeric(df['7 Day Conversion Rate'], errors='coerce')
    df.dropna(subset=['7 Day Conversion Rate'], inplace=True)
    
    return df

# ------------------------
# 2. Giao di·ªán Streamlit
# ------------------------
st.title("üìä T·ªïng h·ª£p t·ªï h·ª£p thi·∫øt k·∫ø theo ASIN v√† CR")

# T·∫£i d·ªØ li·ªáu
df = load_data()

# ---------------------------------------
# 3. Ch·ªçn Niche v√† Product Type ph√π h·ª£p
# ---------------------------------------
selected_niche = st.selectbox("üîç Ch·ªçn Niche", sorted(df['Niche'].unique()))

# L·ªçc danh s√°ch Product Type theo Niche ƒë√£ ch·ªçn
filtered_product_types = df[df['Niche'] == selected_niche]['Product Type'].unique()
selected_product_type = st.selectbox("üì¶ Ch·ªçn Product Type", sorted(filtered_product_types))

# L·ªçc d·ªØ li·ªáu theo l·ª±a ch·ªçn
filtered_df = df[(df['Niche'] == selected_niche) & (df['Product Type'] == selected_product_type)]

# ------------------------------------------
# 4. Hi·ªÉn th·ªã b·∫£ng t·ªïng h·ª£p theo thi·∫øt k·∫ø
# ------------------------------------------
if filtered_df.empty:
    st.warning("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu cho t·ªï h·ª£p Niche v√† Product Type n√†y.")
else:
    # C√°c y·∫øu t·ªë thi·∫øt k·∫ø ƒë·ªÉ nh√≥m d·ªØ li·ªáu
    group_cols = [
        'Layout ( Text and Image)', 'Number of Colors', 'Trend Quote',
        'Recipient/Sender in the Message', 'Color', 'Message Content',
        'Style Design', 'Tone Design', 'Motif Design'
    ]

    # T√≠nh to√°n:
    # - CR trung b√¨nh (Avg_CR)
    # - S·ªë l∆∞·ª£ng ASIN c√≥ t·ªï h·ª£p thi·∫øt k·∫ø ƒë√≥ (Count)
    # - Danh s√°ch ASIN t∆∞∆°ng ·ª©ng (ASINs)
    summary_df = (
        filtered_df
        .groupby(group_cols)
        .agg(
            Avg_CR=('7 Day Conversion Rate', 'mean'),
            Count=('ASIN', 'count'),
            ASINs=('ASIN', lambda x: ', '.join(sorted(set(x))))
        )
        .reset_index()
        .sort_values(by='Avg_CR', ascending=False)
    )

    # Hi·ªÉn th·ªã k·∫øt qu·∫£
    st.subheader("üìà B·∫£ng t·ªïng h·ª£p t·ªï h·ª£p thi·∫øt k·∫ø theo ASIN")
    st.dataframe(summary_df, use_container_width=True)
